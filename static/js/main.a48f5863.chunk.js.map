{"version":3,"sources":["components/styles/Global.ts","components/styles/Container.styled.ts","components/styles/NavBar.styled.ts","assets/images/logo.png","components/NavBar.tsx","components/CategoryItem.tsx","pages/CategorySlider.tsx","components/RecipeBox.tsx","pages/CategoryRecipes.tsx","components/styles/RecipeDetails.styled.ts","pages/RecipeDetails.tsx","pages/Search.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","Container","styled","div","SliderContainer","CategoryContainer","CategoryItemsContainer","Logo","img","Form","form","NavBar","setRecipeSearch","history","useHistory","to","src","logo","alt","onSubmit","e","preventDefault","formElements","currentTarget","elements","searchInput","value","push","action","type","id","placeholder","className","ImageContainer","CategoryItem","idCategory","strCategory","strCategoryThumb","href","StyledSlider","Slider","CategorySlider","useState","categories","setCategories","useEffect","a","fetch","result","json","data","console","log","fetchCategories","dots","infinite","accessibility","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","length","map","category","TextContainer","RecipeBox","idMeal","strMealThumb","strMeal","CategoryRecipes","recipes","setRecipes","useParams","meals","fetchRecipes","recipe","Wrapper","ListContainer","ul","RecipeDetails","setRecipe","ingredients","setIngredients","meal","ingredientsList","i","newIngredient","ingredient","measure","getIngredients","fetchRecipe","strInstructions","item","index","Search","recipeSearch","loading","setLoading","setTimeout","theme","colors","main","header","text","mobile","App","basename","process","Global","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a48f5863.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Poppins', sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n`\r\n\r\nexport default GlobalStyles;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1000px;\r\n  max-width: 100%;\r\n  padding: 0 20px;\r\n  margin: 0 auto;\r\n\r\n`;\r\n\r\nexport const SliderContainer = styled.div`\r\n  position: relative;\r\n  max-width: 900px;\r\n  height: 320px;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    margin: 40px auto;\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nexport const CategoryContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    margin: 40px 0 20px;\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nexport const CategoryItemsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: white;\r\n  padding: 0 60px;\r\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 15%)\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  height: 50px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  background-color: white;\r\n  width: 400px;\r\n  height: 38px;\r\n  border-radius: 5px;\r\n  border: 1px grey solid;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: auto;\r\n\r\n  input {\r\n    color: grey;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 6px 10px;\r\n    border: none;\r\n    font-size: 1rem;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: grey;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  button {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    width: 45px;\r\n    height: 100%;\r\n    border: none;\r\n    border-radius: 0 5px 5px 0;\r\n\r\n    &:hover {\r\n      background-color: orange;\r\n      color: white;\r\n    }\r\n\r\n    .buttonIcon {\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.9a3f42d6.png\";","import React from 'react';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Container, Logo, Form } from './styles/NavBar.styled';\r\nimport logo from '../assets/images/logo.png';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { INavBar } from '../interfaces';\r\n\r\nconst NavBar = ({ setRecipeSearch }: INavBar) => {\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const formElements = form.elements as typeof form.elements & {\r\n      searchInput: { value: string };\r\n    };\r\n    setRecipeSearch(formElements.searchInput.value);\r\n    history.push('/search')\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <Logo src={logo} alt=\"logo\" />\r\n      </Link>\r\n\r\n      <Form onSubmit={handleSubmit} action=\"/search/\">\r\n        <input type=\"text\" id=\"searchInput\" placeholder=\"Find a recipe\" />\r\n        <button type=\"submit\">\r\n          <AiOutlineSearch className=\"buttonIcon\" />\r\n        </button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\nimport { ICategories } from '../interfaces';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: white;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  height: 230px;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    object-fit: contain;\r\n    object-position: center;\r\n  }\r\n`;\r\n\r\nconst CategoryItem = ({\r\n  idCategory,\r\n  strCategory,\r\n  strCategoryThumb,\r\n}: ICategories): JSX.Element => {\r\n  return (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Link to={`categories/${strCategory}`}>\r\n          <img src={strCategoryThumb} alt={strCategory} />\r\n        </Link>\r\n      </ImageContainer>\r\n      <a href={`categories/${strCategory}`}>\r\n        <h2>{strCategory}</h2>\r\n      </a>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport styled from 'styled-components';\r\nimport { ICategories } from '../interfaces';\r\nimport CategoryItem from '../components/CategoryItem';\r\nimport { SliderContainer } from '../components/styles/Container.styled';\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  .slick-next,\r\n  .slick-prev {\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: orange !important;\r\n    border-radius: 50%;\r\n    z-index: 99999;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst CategorySlider = (): JSX.Element => {\r\n  const [categories, setCategories] = useState<ICategories[]>([]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    accessibility: true,\r\n    speed: 500,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 950,\r\n        settings: {\r\n          slidesToShow: 3,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 650,\r\n        settings: {\r\n          slidesToShow: 2,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchCategories = async (): Promise<void> => {\r\n      try {\r\n        const result = await fetch(\r\n          'https://www.themealdb.com/api/json/v1/1/categories.php'\r\n        );\r\n        const data = await result.json();\r\n        setCategories(data.categories);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SliderContainer>\r\n      <h1>Categories</h1>\r\n        <StyledSlider {...settings}>\r\n          {categories.length &&\r\n            categories.map((category) => {\r\n              return <CategoryItem key={category.idCategory} {...category} />;\r\n            })}\r\n        </StyledSlider>\r\n      </SliderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategorySlider;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IRecipes } from '../interfaces';\r\nimport { Link} from 'react-router-dom';\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 270px;\r\n  border: 1px solid grey;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  margin: 20px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  position: relative;\r\n  justify-self: flex-start;\r\n  align-self: flex-start;\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    object-fit: cover;\r\n    object-position: center;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  width: 100%;\r\n  padding: 15px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    font-size: 0.8rem;\r\n    font-weight: 300;\r\n  }\r\n`;\r\n\r\nconst RecipeBox = ({ idMeal, strMealThumb, strMeal }: IRecipes) => {\r\n  return (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Link to={`recipe/${idMeal}`}>\r\n          <img src={strMealThumb} alt={strMeal} />\r\n        </Link>\r\n      </ImageContainer>\r\n      <TextContainer>\r\n        <Link to={`recipe/${idMeal}`}>\r\n          <h2>{strMeal}</h2>\r\n        </Link>\r\n      </TextContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RecipeBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { IRecipes } from '../interfaces';\r\nimport RecipeBox from '../components/RecipeBox';\r\nimport {\r\n  CategoryContainer,\r\n  CategoryItemsContainer,\r\n} from '../components/styles/Container.styled';\r\n\r\nconst CategoryRecipes = (): JSX.Element => {\r\n  const [recipes, setRecipes] = useState<IRecipes[]>([]);\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async (): Promise<void> => {\r\n      try {\r\n        const result = await fetch(\r\n          `https://www.themealdb.com/api/json/v1/1/filter.php?c=${id}`\r\n        );\r\n        const data = await result.json();\r\n        setRecipes(data.meals);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchRecipes();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <CategoryContainer>\r\n        <h1>{id}</h1>\r\n        <CategoryItemsContainer>\r\n          {recipes.map((recipe) => {\r\n            return <RecipeBox key={recipe.idMeal} {...recipe} />;\r\n          })}\r\n        </CategoryItemsContainer>\r\n      </CategoryContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryRecipes;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1000px;\r\n  max-width: 100%;\r\n  padding: 0 20px;\r\n  margin: 0 auto;\r\n\r\n  h2 {\r\n    font-size: 2rem;\r\n    margin: 25px 0 5px;\r\n  }\r\n\r\n  p {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  height: 400px;\r\n  width: 48%;\r\n  position: relative;\r\n  margin: 15px 0;\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    object-fit: contain;\r\n    object-position: center;\r\n  }\r\n`;\r\n\r\nexport const ListContainer = styled.ul`\r\n  width: 48%;\r\n  list-style: none;\r\n  font-size: 1.3rem;\r\n\r\n  li {\r\n    border-bottom: 1px solid #DADADA;\r\n    margin: 2px 0;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Wrapper,\r\n  ImageContainer,\r\n  ListContainer,\r\n} from '../components/styles/RecipeDetails.styled';\r\nimport { IRecipe, IIngredients } from '../interfaces';\r\n\r\nconst RecipeDetails = () => {\r\n  const [recipe, setRecipe] = useState<IRecipe>({} as IRecipe);\r\n  const [ingredients, setIngredients] = useState<IIngredients[]>([]);\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    const fetchRecipe = async (): Promise<void> => {\r\n      try {\r\n        const result = await fetch(\r\n          `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`\r\n        );\r\n        const data = await result.json();\r\n        setRecipe(data.meals[0]);\r\n\r\n        const getIngredients = (meal: IRecipe) => {\r\n          const ingredientsList: IIngredients[] = [];\r\n          for (let i = 1; i <= 10; i++) {\r\n            if (meal[`strIngredient${i}`]) {\r\n              let newIngredient: IIngredients = {\r\n                ingredient: meal[`strIngredient${i}`],\r\n                measure: meal[`strMeasure${i}`],\r\n              };\r\n              ingredientsList.push(newIngredient);\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n          setIngredients(ingredientsList);\r\n        };\r\n        getIngredients(recipe);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchRecipe();\r\n  }, [id, recipe]);\r\n\r\n  const { strMeal, strMealThumb, strInstructions } = recipe;\r\n  return (\r\n    <Container>\r\n      <h2>{strMeal}</h2>\r\n      <Wrapper>\r\n        <ImageContainer>\r\n          <img src={strMealThumb} alt={strMeal} />\r\n        </ImageContainer>\r\n        <ListContainer>\r\n          {ingredients.map((item, index) => {\r\n            const { ingredient, measure } = item;\r\n            return (\r\n              <li key={index}>\r\n                {ingredient} - {measure}\r\n              </li>\r\n            );\r\n          })}\r\n        </ListContainer>\r\n      </Wrapper>\r\n      <p>{strInstructions}</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { IRecipes } from '../interfaces';\r\nimport RecipeBox from '../components/RecipeBox';\r\nimport {\r\n  CategoryContainer,\r\n  CategoryItemsContainer,\r\n} from '../components/styles/Container.styled';\r\n\r\nconst Search = ({ recipeSearch }: { recipeSearch: string }): JSX.Element => {\r\n  const [recipes, setRecipes] = useState<IRecipes[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setRecipes([]);\r\n    setLoading(true);\r\n    const fetchRecipes = async (): Promise<void> => {\r\n      try {\r\n        const result = await fetch(\r\n          `https://www.themealdb.com/api/json/v1/1/search.php?s=${recipeSearch}`\r\n        );\r\n        const data = await result.json();\r\n        console.log(data);\r\n        setTimeout(() => {\r\n          setRecipes(data.meals);\r\n          setLoading(false);\r\n        }, 500);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchRecipes();\r\n  }, [recipeSearch]);\r\n\r\n  return (\r\n    <>\r\n      <CategoryContainer>\r\n        {loading && <h1>Loading</h1>}\r\n        {!recipes && <h1>Can't find any recipes for {recipeSearch}</h1>}\r\n        {recipes && !loading && (\r\n          <>\r\n            <h1>Search result for {recipeSearch}</h1>\r\n            <CategoryItemsContainer>\r\n              {recipes.map((recipe) => {\r\n                return <RecipeBox key={recipe.idMeal} {...recipe} />;\r\n              })}\r\n            </CategoryItemsContainer>{' '}\r\n          </>\r\n        )}\r\n      </CategoryContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyles from './components/styles/Global';\r\nimport { Container } from './components/styles/Container.styled';\r\nimport NavBar from './components/NavBar';\r\nimport CategorySlider from './pages/CategorySlider';\r\nimport CategoryRecipes from './pages/CategoryRecipes';\r\nimport RecipeDetails from './pages/RecipeDetails';\r\nimport Search from './pages/Search';\r\n\r\nconst theme = {\r\n  colors: {\r\n    main: 'orange',\r\n    header: 'black',\r\n    text: 'grey',\r\n  },\r\n  mobile: '768px',\r\n};\r\n\r\nfunction App() {\r\n  const [recipeSearch, setRecipeSearch] = useState('');\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        <NavBar setRecipeSearch={setRecipeSearch} />\r\n        <Switch>\r\n          <Container>\r\n            <Route exact path=\"/\" component={CategorySlider} />\r\n            <Route exact path=\"/categories/:id\" component={CategoryRecipes} />\r\n            <Route exact path=\"/recipe/:id\" component={RecipeDetails} />\r\n            <Route\r\n              exact\r\n              path=\"/categories/recipe/:id\"\r\n              component={RecipeDetails}\r\n            />\r\n            <Route path=\"/search\">\r\n              <Search recipeSearch={recipeSearch} />\r\n            </Route>\r\n          </Container>\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}